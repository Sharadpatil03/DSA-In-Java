Example 1:

Input: nums = [1,1,2]
Output: 2, nums = [1,2,_]
Explanation: Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.
It does not matter what you leave beyond the returned k (hence they are underscores).




class Solution {
    public int removeDuplicates(int[] nums) {
        //brute force: use the set
        // Set<Integer>st = new LinkedHashSet<>();

        // for(int num : nums){
        //     st.add(num);
        // }

        // //copy unique element back
        // int i=0;
        // for(int num : st){
        //     nums[i++]=num;
        // }
        // return st.size();

        // TC : n*log(n)+ o(n)
        // sc : O(n)


        // optimal sol : Use  two pointers
        int n=nums.length;
        int i=0;  // first unique element

        for(int j=1;j<n;j++){
           if(nums[j]!=nums[i]){
                nums[i+1]=nums[j];
                i++;
           }
        }

        return i+1;
        //Tc : O(n)
        // SC : O(1)

    }

    
}
